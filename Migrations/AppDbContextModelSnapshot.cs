// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OiPubAssignment.Entities;

namespace OiPubAssignment.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OiPubAssignment.Entities.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firstname");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lastname");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = new Guid("58ca7a2d-ef9d-47da-9ba2-2a27b76da85c"),
                            FirstName = "Abdullah",
                            LastName = "Rexha"
                        },
                        new
                        {
                            Id = new Guid("68ca7a2d-ef9d-47da-9ba2-2a27b76da85c"),
                            FirstName = "Shpetim",
                            LastName = "Rexha"
                        });
                });

            modelBuilder.Entity("OiPubAssignment.Entities.Paper", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("DatePublished")
                        .HasColumnType("datetime2")
                        .HasColumnName("datapublished");

                    b.Property<long>("NumberOfCitations")
                        .HasColumnType("bigint")
                        .HasColumnName("numberofcitations");

                    b.Property<Guid?>("PaperAuthorId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("paperauthor");

                    b.Property<long>("ReferenceCount")
                        .HasColumnType("bigint")
                        .HasColumnName("referencecount");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("Paper");
                });

            modelBuilder.Entity("OiPubAssignment.Entities.PaperAuthor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PaperId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PaperId");

                    b.ToTable("PaperAuthor");
                });

            modelBuilder.Entity("OiPubAssignment.Entities.PaperAuthor", b =>
                {
                    b.HasOne("OiPubAssignment.Entities.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OiPubAssignment.Entities.Paper", "Paper")
                        .WithMany("PaperAuthors")
                        .HasForeignKey("PaperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Paper");
                });

            modelBuilder.Entity("OiPubAssignment.Entities.Paper", b =>
                {
                    b.Navigation("PaperAuthors");
                });
#pragma warning restore 612, 618
        }
    }
}
